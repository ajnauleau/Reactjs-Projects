{"ast":null,"code":"var _jsxFileName = \"/Users/Antoine/Developer/Code/React-js/Learning-React/Color-Form-Ch6/src/components/Color.js\";\nimport React from 'react';\nimport { StarRating } from \"./StarRating\";\nconst Component = React.Component;\nexport class Color extends Component {\n  componentWillMount() {\n    this.style = {\n      backgroundColor: \"#CCC\"\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const rating = this.props.rating;\n    return rating !== nextProps.rating;\n  }\n\n  componentWillUpdate() {\n    this.style = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          title = _this$props.title,\n          rating = _this$props.rating;\n    const status = rating > prevProps.rating ? 'better' : 'worse';\n    console.log(\"\".concat(title, \" is getting \").concat(status));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          title = _this$props2.title,\n          color = _this$props2.color,\n          rating = _this$props2.rating,\n          onRate = _this$props2.onRate;\n    return React.createElement(\"section\", {\n      className: \"color\",\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      ref: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"color\",\n      style: {\n        backgroundColor: color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(StarRating, {\n      starsSelected: rating,\n      onRate: onRate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Color-Form-Ch6/src/components/Color.js"],"names":["React","StarRating","Component","Color","componentWillMount","style","backgroundColor","shouldComponentUpdate","nextProps","rating","props","componentWillUpdate","componentDidUpdate","prevProps","title","status","console","log","render","color","onRate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;MACQC,S,GAAcF,K,CAAdE,S;AAER,OAAO,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAEjCE,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAb;AACH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAAA,UACrBC,MADqB,GACV,KAAKC,KADK,CACrBD,MADqB;AAE7B,WAAOA,MAAM,KAAKD,SAAS,CAACC,MAA5B;AACH;;AAEDE,EAAAA,mBAAmB,GAAG;AAClB,SAAKN,KAAL,GAAa,IAAb;AACH;;AAEDO,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA,wBACA,KAAKH,KADL;AAAA,UAClBI,KADkB,eAClBA,KADkB;AAAA,UACXL,MADW,eACXA,MADW;AAE1B,UAAMM,MAAM,GAAIN,MAAM,GAAGI,SAAS,CAACJ,MAApB,GAA8B,QAA9B,GAAyC,OAAxD;AACAO,IAAAA,OAAO,CAACC,GAAR,WAAeH,KAAf,yBAAmCC,MAAnC;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,yBACoC,KAAKR,KADzC;AAAA,UACGI,KADH,gBACGA,KADH;AAAA,UACUK,KADV,gBACUA,KADV;AAAA,UACiBV,MADjB,gBACiBA,MADjB;AAAA,UACyBW,MADzB,gBACyBA,MADzB;AAEL,WACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAE,KAAKf,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBS,KAAjB,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AACK,MAAA,KAAK,EAAE;AAAER,QAAAA,eAAe,EAAEa;AAAnB,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEV,MAA3B;AAAmC,MAAA,MAAM,EAAEW,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADJ;AAYH;;AAnCgC","sourcesContent":["import React from 'react';\nimport {StarRating} from \"./StarRating\";\nconst { Component } = React;\n\nexport class Color extends Component {\n\n    componentWillMount() {\n        this.style = { backgroundColor: \"#CCC\" }\n    }\n\n    shouldComponentUpdate(nextProps) {\n        const { rating } = this.props\n        return rating !== nextProps.rating\n    }\n\n    componentWillUpdate() {\n        this.style = null\n    }\n\n    componentDidUpdate(prevProps) {\n        const { title, rating } = this.props\n        const status = (rating > prevProps.rating) ? 'better' : 'worse'\n        console.log(`${title} is getting ${status}`)\n    }\n\n    render() {\n        const { title, color, rating, onRate } = this.props;\n        return (\n            <section className=\"color\" style={this.style}>\n                <h1 ref=\"title\">{title}</h1>\n                <div className=\"color\"\n                     style={{ backgroundColor: color }}>\n                    <p></p>\n                </div>\n                <div>\n                    <StarRating starsSelected={rating} onRate={onRate} />\n                </div>\n            </section>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}