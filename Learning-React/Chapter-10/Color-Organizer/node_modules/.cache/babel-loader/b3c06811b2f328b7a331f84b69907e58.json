{"ast":null,"code":"var _jsxFileName = \"/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-9/Color-Organizer/src/components/ColorList.js\";\nimport React from 'react';\nimport { Color } from './Color';\nimport { rateColor, removeColor } from \"../actions\";\nimport { sortFunction } from \"../lib/array-helpers\";\nexport const ColorList = ({\n  store\n}) => {\n  const _store$getState = store.getState(),\n        colors = _store$getState.colors,\n        sort = _store$getState.sort;\n\n  const sortedColors = [...colors].sort(sortFunction(sort));\n  return React.createElement(\"div\", {\n    className: \"color-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, colors.length === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"No Colors Listed. (Add a Color)\") : sortedColors.map(color => React.createElement(Color, Object.assign({\n    key: color.id\n  }, color, {\n    onRate: rating => store.dispatch(rateColor(color.id, rating)),\n    onRemove: () => store.dispatch(removeColor(color.id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-9/Color-Organizer/src/components/ColorList.js"],"names":["React","Color","rateColor","removeColor","sortFunction","ColorList","store","getState","colors","sort","sortedColors","length","map","color","id","rating","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,YAAvC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA,0BACXA,KAAK,CAACC,QAAN,EADW;AAAA,QAC3BC,MAD2B,mBAC3BA,MAD2B;AAAA,QACnBC,IADmB,mBACnBA,IADmB;;AAElC,QAAMC,YAAY,GAAG,CAAC,GAAGF,MAAJ,EAAYC,IAAZ,CAAiBL,YAAY,CAACK,IAAD,CAA7B,CAArB;AACA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,MAAM,CAACG,MAAP,KAAkB,CAAnB,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADH,GAEGD,YAAY,CAACE,GAAb,CAAiBC,KAAK,IAClB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC;AAAlB,KAA0BD,KAA1B;AACO,IAAA,MAAM,EAAGE,MAAD,IAAYT,KAAK,CAACU,QAAN,CAChBd,SAAS,CAACW,KAAK,CAACC,EAAP,EAAWC,MAAX,CADO,CAD3B;AAGO,IAAA,QAAQ,EAAE,MAAMT,KAAK,CAACU,QAAN,CACZb,WAAW,CAACU,KAAK,CAACC,EAAP,CADC,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CAHR,CADJ;AAeH,CAlBM","sourcesContent":["import React from 'react';\nimport {Color} from './Color';\nimport { rateColor, removeColor } from \"../actions\";\nimport { sortFunction } from \"../lib/array-helpers\";\n\nexport const ColorList = ({store}) => {\n    const {colors, sort} = store.getState()\n    const sortedColors = [...colors].sort(sortFunction(sort))\n    return (\n        <div className=\"color-list\">\n            {(colors.length === 0) ?\n                <p>No Colors Listed. (Add a Color)</p> :\n                sortedColors.map(color =>\n                    <Color key={color.id} {...color}\n                           onRate={(rating) => store.dispatch(\n                               rateColor(color.id, rating))}\n                           onRemove={() => store.dispatch(\n                               removeColor(color.id))}\n                    />\n                )\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}