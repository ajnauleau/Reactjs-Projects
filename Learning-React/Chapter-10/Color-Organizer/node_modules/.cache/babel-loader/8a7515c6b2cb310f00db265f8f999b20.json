{"ast":null,"code":"var _jsxFileName = \"/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-9/Color-Organizer/src/components/Color.js\";\nimport React from 'react';\nimport { StarRating } from \"./StarRating\";\nimport { rateColor, removeColor } from \"../actions\";\nimport { PropTypes } from 'prop-types';\nconst Component = React.Component;\nexport class Color extends Component {\n  render() {\n    const store = this.context.store;\n    const _this$props = this.props,\n          id = _this$props.id,\n          title = _this$props.title,\n          color = _this$props.color,\n          rating = _this$props.rating,\n          onRate = _this$props.onRate;\n    return React.createElement(\"section\", {\n      className: \"color\",\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      ref: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, title), React.createElement(\"button\", {\n      onClick: () => store.dispatch(removeColor(id)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      className: \"color\",\n      style: {\n        backgroundColor: color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(StarRating, {\n      starsSelected: rating,\n      onRate: rating => store.dispatch(rateColor(id, rating)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n/*Color.contextTypes = {\n    store: PropTypes.object\n}*/","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-9/Color-Organizer/src/components/Color.js"],"names":["React","StarRating","rateColor","removeColor","PropTypes","Component","Color","render","store","context","props","id","title","color","rating","onRate","style","dispatch","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,YAArC;AACA,SAASC,SAAT,QAA0B,YAA1B;MACQC,S,GAAcL,K,CAAdK,S;AAER,OAAO,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAEjCE,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKC,OADlB,CACGD,KADH;AAAA,wBAEwC,KAAKE,KAF7C;AAAA,UAEGC,EAFH,eAEGA,EAFH;AAAA,UAEOC,KAFP,eAEOA,KAFP;AAAA,UAEcC,KAFd,eAEcA,KAFd;AAAA,UAEqBC,MAFrB,eAEqBA,MAFrB;AAAA,UAE6BC,MAF7B,eAE6BA,MAF7B;AAGL,WACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAE,KAAKC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBJ,KAAjB,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MACbJ,KAAK,CAACS,QAAN,CACId,WAAW,CAACQ,EAAD,CADf,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AACK,MAAA,KAAK,EAAE;AAAEO,QAAAA,eAAe,EAAEL;AAAnB,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEC,MAA3B;AACY,MAAA,MAAM,EAAEA,MAAM,IACVN,KAAK,CAACS,QAAN,CACIf,SAAS,CAACS,EAAD,EAAKG,MAAL,CADb,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CADJ;AAsBH;;AA3BgC;AA8BrC","sourcesContent":["import React from 'react';\nimport {StarRating} from \"./StarRating\";\nimport {rateColor, removeColor} from \"../actions\";\nimport { PropTypes } from 'prop-types';\nconst { Component } = React;\n\nexport class Color extends Component {\n\n    render() {\n        const { store } = this.context\n        const { id, title, color, rating, onRate } = this.props;\n        return (\n            <section className=\"color\" style={this.style}>\n                <h1 ref=\"title\">{title}</h1>\n                <button onClick={() =>\n                    store.dispatch(\n                        removeColor(id)\n                    )\n                }>X</button>\n                <div className=\"color\"\n                     style={{ backgroundColor: color }}>\n                    <p></p>\n                </div>\n                <div>\n                    <StarRating starsSelected={rating}\n                                onRate={rating =>\n                                    store.dispatch(\n                                        rateColor(id, rating)\n                                        )\n                                    } />\n                </div>\n            </section>\n        )\n    }\n}\n\n/*Color.contextTypes = {\n    store: PropTypes.object\n}*/\n"]},"metadata":{},"sourceType":"module"}