{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { colors } from '../reducers/colorsReducer';\nimport { sort } from '../reducers/sortReducer';\nimport stateData from '../data/initial-data';\n\nconst logger = store => next => action => {\n  let result;\n  console.groupCollapsed(\"dispatching\", action.type);\n  console.log('prev state', store.getState());\n  console.log('action', action);\n  result = next(action);\n  console.log('next state', store.getState());\n  console.groupEnd();\n  return result;\n};\n\nconst saver = store => next => action => {\n  let result = next(action);\n  localStorage['redux-store'] = JSON.stringify(store.getState());\n  return result;\n};\n\nconst storeFactory = (initialState = stateData) => applyMiddleware(logger, saver)(createStore)(combineReducers({\n  colors,\n  sort\n}), localStorage['redux-store'] ? JSON.parse(localStorage['redux-store']) : initialState);\n\nexport default storeFactory;","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-11/Color-Organizer/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","colors","sort","stateData","logger","store","next","action","result","console","groupCollapsed","type","log","getState","groupEnd","saver","localStorage","JSON","stringify","storeFactory","initialState","parse"],"mappings":"AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACtC,MAAIC,MAAJ;AACAC,EAAAA,OAAO,CAACC,cAAR,CAAuB,aAAvB,EAAsCH,MAAM,CAACI,IAA7C;AACAF,EAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,EAAAA,OAAO,CAACG,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACAC,EAAAA,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAb;AACAE,EAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,EAAAA,OAAO,CAACK,QAAR;AACA,SAAON,MAAP;AACH,CATD;;AAWA,MAAMO,KAAK,GAAGV,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACrC,MAAIC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAjB;AACAS,EAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACQ,QAAN,EAAf,CAA9B;AACA,SAAOL,MAAP;AACH,CAJD;;AAMA,MAAMW,YAAY,GAAG,CAACC,YAAY,GAACjB,SAAd,KACjBH,eAAe,CAACI,MAAD,EAASW,KAAT,CAAf,CAA+BjB,WAA/B,EACIC,eAAe,CAAC;AAACE,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,CADnB,EAEKc,YAAY,CAAC,aAAD,CAAb,GACIC,IAAI,CAACI,KAAL,CAAWL,YAAY,CAAC,aAAD,CAAvB,CADJ,GAEII,YAJR,CADJ;;AAQA,eAAeD,YAAf","sourcesContent":["\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { colors } from '../reducers/colorsReducer'\nimport { sort } from '../reducers/sortReducer'\nimport stateData from '../data/initial-data'\n\nconst logger = store => next => action => {\n    let result\n    console.groupCollapsed(\"dispatching\", action.type)\n    console.log('prev state', store.getState())\n    console.log('action', action)\n    result = next(action)\n    console.log('next state', store.getState())\n    console.groupEnd()\n    return result\n}\n\nconst saver = store => next => action => {\n    let result = next(action)\n    localStorage['redux-store'] = JSON.stringify(store.getState())\n    return result\n}\n\nconst storeFactory = (initialState=stateData) =>\n    applyMiddleware(logger, saver)(createStore)(\n        combineReducers({colors, sort}),\n        (localStorage['redux-store']) ?\n            JSON.parse(localStorage['redux-store']) :\n            initialState\n    )\n\nexport default storeFactory\n"]},"metadata":{},"sourceType":"module"}