{"ast":null,"code":"import { compose } from 'redux';\n\nconst sortByDate = field => (a, b) => new Date(b[field]) - new Date(a[field]);\n\nconst sortByString = field => (a, b) => a[field].toLowerCase() < b[field].toLowerCase() ? -1 : 1;\n\nconst sortByNumber = field => (a, b) => b[field] - a[field];\n\nconst whichSort = (type, field) => type === \"date\" ? sortByDate(field) : type === \"string\" ? sortByString(field) : sortByNumber(field);\n\nexport const sortFunction = sort => sort === \"SORTED_BY_TITLE\" ? whichSort(\"string\", \"title\") : sort === \"SORTED_BY_RATING\" ? whichSort(\"number\", \"rating\") : whichSort(\"date\", \"timestamp\");\n\nconst getSortState = (sortBy = \"date\", stateHash = {\n  date: \"SORTED_BY_DATE\",\n  title: \"SORTED_BY_TITLE\",\n  rating: \"SORTED_BY_RATING\"\n}) => stateHash[sortBy];\n\nconst locateSortFunction = compose(sortFunction, getSortState);\nexport const sortColors = (colors, sortBy) => compose(fn => [...colors].sort(fn), locateSortFunction)(sortBy);\nexport const getFirstArrayItem = array => array[0];\nexport const filterArrayById = (array, id) => array.filter(item => item.id === id);\nexport const findById = compose(getFirstArrayItem, filterArrayById);","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-12/Color-Organizer/src/lib/array-helpers.js"],"names":["compose","sortByDate","field","a","b","Date","sortByString","toLowerCase","sortByNumber","whichSort","type","sortFunction","sort","getSortState","sortBy","stateHash","date","title","rating","locateSortFunction","sortColors","colors","fn","getFirstArrayItem","array","filterArrayById","id","filter","item","findById"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IACpB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACF,KAAD,CAAV,IAAqB,IAAIG,IAAJ,CAASF,CAAC,CAACD,KAAD,CAAV,CADnC;;AAGA,MAAMI,YAAY,GAAGJ,KAAK,IACtB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACD,KAAD,CAAD,CAASK,WAAT,KAAyBH,CAAC,CAACF,KAAD,CAAD,CAASK,WAAT,EAA1B,GAAoD,CAAC,CAArD,GAAyD,CADvE;;AAGA,MAAMC,YAAY,GAAGN,KAAK,IACtB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACF,KAAD,CAAD,GAAWC,CAAC,CAACD,KAAD,CAD1B;;AAGA,MAAMO,SAAS,GAAG,CAACC,IAAD,EAAOR,KAAP,KACbQ,IAAI,KAAK,MAAV,GACIT,UAAU,CAACC,KAAD,CADd,GAEKQ,IAAI,KAAK,QAAV,GACIJ,YAAY,CAACJ,KAAD,CADhB,GAEIM,YAAY,CAACN,KAAD,CALxB;;AAOA,OAAO,MAAMS,YAAY,GAAGC,IAAI,IAC3BA,IAAI,KAAK,iBAAV,GACIH,SAAS,CAAC,QAAD,EAAW,OAAX,CADb,GAEKG,IAAI,KAAK,kBAAV,GACIH,SAAS,CAAC,QAAD,EAAW,QAAX,CADb,GAEIA,SAAS,CAAC,MAAD,EAAS,WAAT,CALd;;AAOP,MAAMI,YAAY,GAAG,CAACC,MAAM,GAAG,MAAV,EACCC,SAAS,GAAG;AACRC,EAAAA,IAAI,EAAE,gBADE;AAERC,EAAAA,KAAK,EAAE,iBAFC;AAGRC,EAAAA,MAAM,EAAE;AAHA,CADb,KAKOH,SAAS,CAACD,MAAD,CALrC;;AAOA,MAAMK,kBAAkB,GAAGnB,OAAO,CAC9BW,YAD8B,EAE9BE,YAF8B,CAAlC;AAKA,OAAO,MAAMO,UAAU,GAAG,CAACC,MAAD,EAASP,MAAT,KAAoBd,OAAO,CACjDsB,EAAE,IAAI,CAAC,GAAGD,MAAJ,EAAYT,IAAZ,CAAiBU,EAAjB,CAD2C,EAEjDH,kBAFiD,CAAP,CAG5CL,MAH4C,CAAvC;AAKP,OAAO,MAAMS,iBAAiB,GAAGC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAxC;AAEP,OAAO,MAAMC,eAAe,GAAG,CAACD,KAAD,EAAQE,EAAR,KAC3BF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CADG;AAGP,OAAO,MAAMG,QAAQ,GAAG7B,OAAO,CAC3BuB,iBAD2B,EAE3BE,eAF2B,CAAxB","sourcesContent":["import { compose } from 'redux'\n\nconst sortByDate = field =>\n    (a, b) => new Date(b[field]) - new Date(a[field])\n\nconst sortByString = field =>\n    (a, b) => (a[field].toLowerCase() < b[field].toLowerCase()) ? -1 : 1\n\nconst sortByNumber = field =>\n    (a, b) => b[field] - a[field]\n\nconst whichSort = (type, field) =>\n    (type === \"date\") ?\n        sortByDate(field) :\n        (type === \"string\") ?\n            sortByString(field) :\n            sortByNumber(field)\n\nexport const sortFunction = sort =>\n    (sort === \"SORTED_BY_TITLE\") ?\n        whichSort(\"string\", \"title\") :\n        (sort === \"SORTED_BY_RATING\") ?\n            whichSort(\"number\", \"rating\") :\n            whichSort(\"date\", \"timestamp\")\n\nconst getSortState = (sortBy = \"date\",\n                      stateHash = {\n                          date: \"SORTED_BY_DATE\",\n                          title: \"SORTED_BY_TITLE\",\n                          rating: \"SORTED_BY_RATING\"\n                      }) => stateHash[sortBy]\n\nconst locateSortFunction = compose(\n    sortFunction,\n    getSortState\n)\n\nexport const sortColors = (colors, sortBy) => compose(\n    fn => [...colors].sort(fn),\n    locateSortFunction\n)(sortBy)\n\nexport const getFirstArrayItem = array => array[0]\n\nexport const filterArrayById = (array, id) =>\n    array.filter(item => item.id === id)\n\nexport const findById = compose(\n    getFirstArrayItem,\n    filterArrayById\n)\n"]},"metadata":{},"sourceType":"module"}