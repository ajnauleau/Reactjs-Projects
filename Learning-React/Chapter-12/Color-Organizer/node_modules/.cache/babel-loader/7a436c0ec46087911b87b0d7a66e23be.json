{"ast":null,"code":"import express from 'express';\nimport path from 'path';\nimport fs from 'fs';\nimport storeFactory from './store/index';\nimport initialState from './data/initial-data.json';\nconst serverStore = storeFactory(true, initialState);\nserverStore.subscribe(() => fs.writeFile(path.join(__dirname, './data/initial-data.json'), JSON.stringify(serverStore.getState()), error => error ? console.log(\"Error saving state!\", error) : null));\nconst fileAssets = express.static(path.join(__dirname, '../../dist/assets'));\n\nconst logger = (req, res, next) => {\n  console.log(\"\".concat(req.method, \" request for '\").concat(req.url, \"'\"));\n  next();\n};\n\nconst respond = (req, res) => res.status(200).send(\"\\n    <!DOCTYPE html>\\n    <html>\\n        <head>\\n            <meta charset=\\\"utf-8\\\">\\n            <title>Universal Color Organiser</title>\\n        </head>\\n        <body>\\n            <div id=\\\"react-container\\\">ready...</div>\\n        </body>\\n    </html>\\n    \");\n\nconst addStoreToRequestPipeline = (req, res, next) => {\n  req.store = serverStore;\n  next();\n};\n\nexport default express().use(logger).use(fileAssets).use(addStoreToRequestPipeline).use(respond);","map":{"version":3,"sources":["/Users/Antoine/Developer/Code/React-js/Learning-React/Chapter-12/Color-Organizer/src/app.js"],"names":["express","path","fs","storeFactory","initialState","serverStore","subscribe","writeFile","join","__dirname","JSON","stringify","getState","error","console","log","fileAssets","static","logger","req","res","next","method","url","respond","status","send","addStoreToRequestPipeline","store","use"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,MAAMC,WAAW,GAAGF,YAAY,CAAC,IAAD,EAAOC,YAAP,CAAhC;AAEAC,WAAW,CAACC,SAAZ,CAAsB,MAClBJ,EAAE,CAACK,SAAH,CACIN,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,0BAArB,CADJ,EAEIC,IAAI,CAACC,SAAL,CAAeN,WAAW,CAACO,QAAZ,EAAf,CAFJ,EAGIC,KAAK,IAAKA,KAAD,GACLC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC,CADK,GAEL,IALR,CADJ;AAUA,MAAMG,UAAU,GAAGhB,OAAO,CAACiB,MAAR,CACfhB,IAAI,CAACO,IAAL,CAAUC,SAAV,EAAqB,mBAArB,CADe,CAAnB;;AAIA,MAAMS,MAAM,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC/BP,EAAAA,OAAO,CAACC,GAAR,WAAeI,GAAG,CAACG,MAAnB,2BAA0CH,GAAG,CAACI,GAA9C;AACAF,EAAAA,IAAI;AACP,CAHD;;AAKA,MAAMG,OAAO,GAAG,CAACL,GAAD,EAAMC,GAAN,KACZA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,8QADJ;;AAcA,MAAMC,yBAAyB,GAAG,CAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClDF,EAAAA,GAAG,CAACS,KAAJ,GAAYvB,WAAZ;AACAgB,EAAAA,IAAI;AACP,CAHD;;AAKA,eAAerB,OAAO,GACb6B,GADM,CACFX,MADE,EAENW,GAFM,CAEFb,UAFE,EAGNa,GAHM,CAGFF,yBAHE,EAINE,GAJM,CAIFL,OAJE,CAAf","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport fs from 'fs'\nimport storeFactory from './store/index'\nimport initialState from './data/initial-data.json'\n\nconst serverStore = storeFactory(true, initialState)\n\nserverStore.subscribe(() =>\n    fs.writeFile(\n        path.join(__dirname, './data/initial-data.json'),\n        JSON.stringify(serverStore.getState()),\n        error => (error) ?\n            console.log(\"Error saving state!\", error) :\n            null\n    )\n)\n\nconst fileAssets = express.static(\n    path.join(__dirname, '../../dist/assets')\n)\n\nconst logger = (req, res, next) => {\n    console.log(`${req.method} request for '${req.url}'`)\n    next()\n}\n\nconst respond = (req, res) =>\n    res.status(200).send(`\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <meta charset=\"utf-8\">\n            <title>Universal Color Organiser</title>\n        </head>\n        <body>\n            <div id=\"react-container\">ready...</div>\n        </body>\n    </html>\n    `)\n\nconst addStoreToRequestPipeline = (req, res, next) => {\n    req.store = serverStore\n    next()\n}\n\nexport default express()\n        .use(logger)\n        .use(fileAssets)\n        .use(addStoreToRequestPipeline)\n        .use(respond)\n"]},"metadata":{},"sourceType":"module"}